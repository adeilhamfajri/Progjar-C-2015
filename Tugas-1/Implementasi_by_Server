/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package server;

import java.io.*;
import java.net.*;
import java.util.*;

/**
 *
 * @author Ade Ilham Fajri
 */
class Implementasi_by_Server {
   
    public void start() throws IOException{
        String dir_sem = new String("H:/");
        File dir = new File(dir_sem);
        
         int port = 4356;
         ServerSocket serversock = new ServerSocket(port);
         System.out.println("Server started listening on " + port);
         
         while (true) {
            try (Socket socket = serversock.accept()) {
                InputStream is = socket.getInputStream();
                OutputStream os = socket.getOutputStream();
                
                byte[] buf = new byte[1024];
                int len = is.read(buf);
                String request = new String(buf);
                String[] temp = request.split("\\s+");
                String cmd = temp[0].trim();
                
                boolean error = false;
                String respond = "";
                if (cmd.equals("ls")) {
                    if (temp.length > 2) {
                        error = true;
                        respond = "too many arguments";
                    }
                    else {
                        //return list of files
                        respond = "";
                        String[] files = null;
                        if (temp.length == 1)
                            files = dir.list();
                        else {
                            String args = temp[1].trim();
                            File custom_dir = new File(args);
                            if (!custom_dir.isDirectory()) {
                                error = true;
                                respond = "Directori yang dituju tidak ada!\n";
                            }
                            else {
                                files = custom_dir.list();
                            }
                        }
                        
                        if (!error) {
                            for (String file: files) {
                                respond += file + ('\n');
                            }
                        }
                    }
                }
                
                else if (cmd.equals("pwd")) {
                        if (temp.length > 1) {
                            error = true;
                            respond = "pwd takes no argument\n";
                        }
                        else {
                            respond = dir_sem + '\n';
                        }
                    }
                
                else if (cmd.equals("cd")) { //cd /thaybah
                    if (temp.length > 2) {
                        error = true;
                        respond = "too many arguments\n";
                    }
                    else {
                        if (temp.length == 1) {
                            int idx = dir_sem.lastIndexOf('/');
                            dir_sem = dir_sem.substring(0,idx);
                            dir = new File(dir_sem);
                        }
                        else {
                            String args = temp[1].trim();
                            System.out.println("cd " + args);
                            File target_dir = new File(args);
                            if (!target_dir.isDirectory()) {
                                error = true;
                                respond = "Directori yang dituju tidak ada!\n";
                            }
                            else {
                                dir_sem = args;
                                dir = new File(dir_sem);
                            }
                        }
                    }
                }
                
                   else if (cmd.equals("mkdir")) {
                        if (temp.length == 1) {
                            error = true;
                            respond = "mkdir need an argument(folder_name)\n";
                        }
                        else if (temp.length > 2) {
                            error = true;
                            respond = "too many arguments\n";
                        }
                        else {
                            String args = temp[1].trim();
                            File target_dir;
                            if (args.contains("/")) {
                                target_dir = new File(args);
                            }
                            else {
                                target_dir = new File(dir_sem + '/' + args);
                            }
                            
                            boolean flag = true;
                            if (!target_dir.exists()) {
                                flag = target_dir.mkdir();
                            }
                            else {
                                error = true;
                                respond = "Folder exists!";
                            }
                            
                            if (!flag) {
                                respond = "Failed to create directory, please try again.\n";
                            }
                        }
                    }
                
                else {
                    error = true;
                    respond = "command not found\n";
                }
                
                os.write(respond.getBytes());
                os.flush();
                
                os.close();
                is.close();
            }

                }
            }
        }
